<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Implementation on Imaginary City</title><link>https://blog.mukyu.tw/tags/implementation/</link><description>Recent content in Implementation on Imaginary City</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Thu, 30 Jun 2022 09:00:00 +0000</lastBuildDate><atom:link href="https://blog.mukyu.tw/tags/implementation/index.xml" rel="self" type="application/rss+xml"/><item><title>1694A. Creep</title><link>https://blog.mukyu.tw/oj/codeforces/1694a-creep/</link><pubDate>Thu, 30 Jun 2022 09:00:00 +0000</pubDate><guid>https://blog.mukyu.tw/oj/codeforces/1694a-creep/</guid><description>題目 Codeforces: 1694A: Creep Define the score of some binary string 𝑇 as the absolute difference between the number of zeroes and ones in it. (for example, 𝑇= 010001 contains 4 zeroes and 2 ones, so the score of 𝑇 is $|4−2|=2$). Define the creepiness of some binary string 𝑆 as the maximum score among all of its</description></item><item><title>1693A. Directional Increase</title><link>https://blog.mukyu.tw/oj/codeforces/1693a-directional-increase/</link><pubDate>Thu, 30 Jun 2022 08:00:00 +0000</pubDate><guid>https://blog.mukyu.tw/oj/codeforces/1693a-directional-increase/</guid><description>題目 Codeforces: 1693A: Directional Increase We have an array of length n. Initially, each element is equal to 0 and there is a pointer located on the first element. We can do the following two kinds of operations any number of times (possibly zero) in any order: If the pointer is not on the last element, increase the element the pointer is currently on by 1. Then move it</description></item></channel></rss>